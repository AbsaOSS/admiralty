apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-admission-controller
  labels:
    app: pod-admission-controller
spec:
  selector:
    matchLabels:
      app: pod-admission-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pod-admission-controller
    spec:
      containers:
      - image: quay.io/admiralty/multicluster-scheduler-pod-admission-controller
        imagePullPolicy: Always
        name: webhook
        env:
        - name: DEPLOYMENT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          runAsUser: 1000
        ports:
        - containerPort: 9876
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
      serviceAccountName: pod-admission-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: pod-admission-controller-cert
---
apiVersion: v1
kind: Secret
metadata:
  name: pod-admission-controller-cert
# data will be populated by controller-runtime
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-admission-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-admission-controller
rules:
# controller-runtime manages secret and service for webhook
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
# TODO: PR: controller-runtime shouldn't need those two rules at cluster scope; could be a Role
# TODO: less verbs, not sure controller-runtime needs them all
# also, add resourceNames? unless namespace is a good enough boundary
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
# TODO: less verbs, not sure controller-runtime needs them all
# also, add resourceNames?
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-admission-controller
subjects:
- kind: ServiceAccount
  name: pod-admission-controller
